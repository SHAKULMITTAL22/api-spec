# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=77709b3e66
# ROOST_METHOD_SIG_HASH=9efcbbb286
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Reset ONT device to resolve connectivity issues',
#     steps: 'Given a customer with subscriber ID "SVTAL002" reports intermittent internet connectivity\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate ONT connectivity issues\n' +
#       'When the support representative uses the configuration API to reset the GPON ONT\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report stable internet connectivity',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "ResetONTDeviceToResolveConnectivityIssues.csv"
    fields:
      - "subscriberId"
      - "actionType"
      - "id"
      - "adminStatus"
      - "startDate"
      - "endDate"
      - "state"
    delimiter: "^|^"
  environments:
    development:
      API_HOST: "http://dev.example.com"
    production:
      API_HOST: "http://prod.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Reset ONT device to resolve connectivity issues"
    flow:
      - post:
          url: "/serviceTest"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            serviceTest:
              type: "diagnostic"
              customer:
                subscriberId: "{{ subscriberId }}"
          log: "Initiating a diagnostic test for subscriber ID SVTAL002"
          expect:
            - statusCode: 200
            - hasProperty: "testId"
            - hasProperty: "result"
            - equals:
                result: "ONT connectivity issues"
          think: 1

      - post:
          url: "/configuration"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            configuration:
              action:
                type: "{{ actionType }}"
              id: "{{ id }}"
              adminStatus: "{{ adminStatus }}"
              startDate: "{{ startDate }}"
              endDate: "{{ endDate }}"
              state: "{{ state }}"
          log: "Using the configuration API to reset the GPON ONT"
          expect:
            - statusCode: 200
            - hasProperty: "success"
            - equals:
                success: true
          think: 1
