# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=77709b3e66
# ROOST_METHOD_SIG_HASH=9efcbbb286
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Reset ONT device to resolve connectivity issues',
#     steps: 'Given a customer with subscriber ID "SVTAL002" reports intermittent internet connectivity\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate ONT connectivity issues\n' +
#       'When the support representative uses the configuration API to reset the GPON ONT\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report stable internet connectivity',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  processor: "./processors.js"
  environments:
    development:
      target: "https://dev.api.example.com"
  payload:
    path: "ResetONTDeviceToResolveConnectivityIssues.csv"
    fields:
      - "subscriberID"
      - "testID"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "scenario_reset_ont_device_to_resolve_connectivity_issues"
    flow:
      - log: "Initiating diagnostic test for subscriber SVTAL002"
      - post:
          url: "/serviceTest"
          json:
            subscriberID: "{{ subscriberID }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "testID"
      - think: 1

      - log: "Using the configuration API to reset the GPON ONT for subscriber SVTAL002"
      - post:
          url: "/configuration"
          json:
            action: "reset"
            subscriberID: "{{ subscriberID }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "status"
            - equals:
                body:
                  status: "success"
      - think: 1
