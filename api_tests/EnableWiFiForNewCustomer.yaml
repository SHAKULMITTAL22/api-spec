# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=4992e43bd0
# ROOST_METHOD_SIG_HASH=cb107cc3ec
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Enable WiFi for a new customer',
#     steps: 'Given a new customer with subscriber ID "SVTAL005" has just had their fiber service installed\n' +
#       'When the support representative uses the configuration API to enable WiFi\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should be able to see and connect to their new WiFi network',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "EnableWiFiForNewCustomer.csv"
    fields:
      - "configuration.id"
      - "configuration.adminStatus"
      - "configuration.startDate"
      - "configuration.endDate"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}

scenarios:
  - name: "Enable WiFi for a new customer"
    flow:
      - post:
          url: "/configuration"
          json:
            configuration:
              action:
                type: "HGW_WIFI_ENABLE"
              id: "{{ configuration.id }}"
              adminStatus: "{{ configuration.adminStatus }}"
              startDate: "{{ configuration.startDate }}"
              endDate: "{{ configuration.endDate }}"
              state: "ACTIVE"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          log: "Sending request to enable WiFi for a new customer"
          expect:
            - statusCode: 200
            - hasProperty: "control"
            - hasProperty: "control.type"
            - hasProperty: "control.message"
            - hasProperty: "control.code"
            - equals: 
                jsonpath: "$.control.type"
                value: "S"
            - equals: 
                jsonpath: "$.control.message"
                value: "Operation Successful"
            - equals: 
                jsonpath: "$.control.code"
                value: "200_OK"
      - log: "Expected to receive a success response indicating WiFi has been enabled"
      - think: 1
      - post:
          url: "/configuration"
          json:
            configuration:
              action:
                type: "HGW_WIFI_ENABLE"
              id: "INVALID_ID"
              adminStatus: "1"
              startDate: "2021-01-01T00:00:00Z"
              endDate: "2021-01-02T00:00:00Z"
              state: "ACTIVE"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          log: "Sending invalid request to test error handling in the API"
          expect:
            - statusCode: 400
            - hasProperty: "type"
            - hasProperty: "message"
            - hasProperty: "code"
            - equals: 
                jsonpath: "$.type"
                value: "E"
            - equals: 
                jsonpath: "$.message"
                value: "Invalid Request"
            - equals: 
                jsonpath: "$.code"
                value: "400_BAD_REQUEST"
      - log: "Expected to receive an error response due to invalid input"
      - think: 1
