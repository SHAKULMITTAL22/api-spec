# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type DBRX and AI Model dbrx-instruct-032724
# 
# ROOST_METHOD_HASH=75c9169c0c
# ROOST_METHOD_SIG_HASH=7a25c565c6
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Diagnose and resolve weak WiFi signal',
#     steps: 'Given a customer with subscriber ID "SVTAL001" reports a weak WiFi signal\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate low WiFi signal strength\n' +
#       'When the support representative uses the configuration API to change the WiFi channel\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report improved WiFi signal strength',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 10
      arrivalRate: 1
  payload:
    fields:
      - "subscriberId": "SVTAL001"
    delimiter: "^|^"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - scenario: Diagnose and resolve weak WiFi signal
    flow:
      - log: "Given a customer with subscriber ID {{ subscriberId }} reports a weak WiFi signal"
      - post:
          url: "/configuration"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            subscriberId: "{{ subscriberId }}"
        expect:
          statusCode: 200
          headers:
            - "content-type": "application/json"
          body:
            - "status": "success"
        log: "When the support representative initiates a diagnostic test"
      - post:
          url: "/listener/configurationResultEvent"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            subscriberId: "{{ subscriberId }}"
            testId: "test123"
            wifiSignalStrength: "low"
        expect:
          statusCode: 200
          headers:
            - "content-type": "application/json"
          body:
            - "status": "success"
        log: "Then the service test API should return a test ID and the diagnostic result should indicate low WiFi signal strength"
      - post:
          url: "/configuration"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            subscriberId: "{{ subscriberId }}"
            wifiChannel: "channel1"
        expect:
          statusCode: 200
          headers:
            - "content-type": "application/json"
          body:
            - "status": "success"
        log: "When the support representative uses the configuration API to change the WiFi channel"
      - post:
          url: "/listener/configurationResultEvent"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            subscriberId: "{{ subscriberId }}"
            testId: "test123"
            wifiSignalStrength: "good"
        expect:
          statusCode: 200
          headers:
            - "content-type": "application/json"
          body:
            - "status": "success"
        log: "Then the customer should report improved WiFi signal strength"
      - think: 5
