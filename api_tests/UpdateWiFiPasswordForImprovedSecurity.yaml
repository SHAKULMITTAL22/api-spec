# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# ROOST_METHOD_HASH=5a02b01fca
# ROOST_METHOD_SIG_HASH=9c8324b0ac
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Update WiFi password for improved security',
#     steps: 'Given a customer with subscriber ID "SVTAL003" requests a WiFi password change\n' +
#       'When the support representative uses the configuration API to set a new WiFi password\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should be able to connect to the WiFi network with the new password',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 1
      arrivalRate: 1
  payload:
    path: "{{ROOST_CSV_FILE_NAME}}"
    fields:
      - "subscriberId"
      - "newPassword"
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: Update WiFi password for improved security
    flow:
      - post:
          url: "/configuration"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            configuration:
              action:
                type: "HGW_WIFI_SET_PASSWD"
                parameters:
                  wifiIndex: "1"
                  passwd: "{{ newPassword }}"
                  mode: "WPAand11i"
              customer:
                subscriberId: "{{ subscriberId }}"
          capture:
            - json: "$.control.type"
              as: "responseType"
            - json: "$.control.code"
              as: "responseCode"
            - json: "$.control.message"
              as: "responseMessage"
            - json: "$.configuration.id"
              as: "configurationId"
      - think: 1
      - log: "Configuration API Response - Type: {{ responseType }}, Code: {{ responseCode }}, Message: {{ responseMessage }}, Configuration ID: {{ configurationId }}"
      - assert:
          - equals:
              - "{{ responseType }}"
              - "S"
          - equals:
              - "{{ responseCode }}"
              - "200"
          - equals:
              - "{{ responseMessage }}"
              - "OK"
          - isString: "{{ configurationId }}"
