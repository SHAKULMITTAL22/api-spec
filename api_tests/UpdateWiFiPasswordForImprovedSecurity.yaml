# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=5a02b01fca
# ROOST_METHOD_SIG_HASH=9c8324b0ac
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Update WiFi password for improved security',
#     steps: 'Given a customer with subscriber ID "SVTAL003" requests a WiFi password change\n' +
#       'When the support representative uses the configuration API to set a new WiFi password\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should be able to connect to the WiFi network with the new password',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  processor: "./processors.js"
  defaults:
    headers:
      Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
  payload:
    path: "UpdateWiFiPasswordForImprovedSecurity.csv"
    fields:
      - "newWiFiPassword"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Update WiFi password for improved security"
    flow:
      - log: "Sending request to configure new WiFi password."
      - post:
          url: "/configuration"
          json:
            subscriberID: "SVTAL003"
            newWiFiPassword: "{{ newWiFiPassword }}"
          headers:
            Content-Type: "application/json"
        expect:
          - statusCode: 200
          - hasProperty: "control"
          - hasProperty: "control.type"
          - hasProperty: "control.message"
          - hasProperty: "control.code"
          - equals: 
              path: "control.type"
              value: "S"
      - think: 1

      - log: "Checking configuration result via configurationResultEvent endpoint."
      - post:
          url: "/listener/configurationResultEvent"
          json:
            subscriberID: "SVTAL003"
          headers:
            Content-Type: "application/json"
        expect:
          - statusCode: 204
      - think: 1

      - log: "Sending request to serviceTest to validate new WiFi password."
      - post:
          url: "/serviceTest"
          json:
            subscriberID: "SVTAL003"
            action: "validateWiFiConnection"
          headers:
            Content-Type: "application/json"
        expect:
          - statusCode: 200
          - hasProperty: "control"
          - hasProperty: "control.type"
          - hasProperty: "control.message"
          - hasProperty: "control.code"
          - equals: 
              path: "control.type"
              value: "S"
      - think: 1

      - log: "Checking service test result via serviceTestResultEvent endpoint."
      - post:
          url: "/listener/serviceTestResultEvent"
          json:
            subscriberID: "SVTAL003"
          headers:
            Content-Type: "application/json"
        expect:
          - statusCode: 204
      - think: 1
