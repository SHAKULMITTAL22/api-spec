# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=6105ffde10
# ROOST_METHOD_SIG_HASH=e3af0b476f
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Troubleshoot and resolve a failed configuration change',
#     steps: 'Given a customer with subscriber ID "SVTAL006" requests a WiFi configuration change\n' +
#       'When the support representative uses the configuration API to make the requested change\n' +
#       'And the configuration API returns an error response\n' +
#       'Then the support representative should initiate a diagnostic test\n' +
#       'And the service test API should return a test ID\n' +
#       'And the diagnostic result should provide details about the configuration failure\n' +
#       'When the support representative resolves the identified issue and retries the configuration change\n' +
#       'Then the configuration API should return a success response\n' +
#       "And the customer's WiFi should reflect the requested changes",
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: '{{ $processEnvironment.API_HOST }}'
  phases:
    - duration: 60
      arrivalRate: 1
  processor: ./processors.js
  environments:
    development:
      target: http://dev.api.example.com
    staging:
      target: http://staging.api.example.com
    production:
      target: http://api.example.com
  payload:
    path: TroubleshootAndResolveFailedConfigurationChange.csv
    fields:
      - subscriberId
      - type
      - parameters
      - serviceTestId
    skipHeader: true
    delimiter: ^|^
  plugins:
    expect: {}
scenarios:
  - name: scenario_TroubleshootAndResolveFailedConfigurationChange
    flow:
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/configuration'
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
            Content-Type: application/json
          json:
            configuration:
              action:
                type: '{{ type }}'
                parameters: '{{ parameters }}'
              customer:
                subscriberId: '{{ subscriberId }}'
          log: >-
            Attempting to change WiFi configuration for subscriber ID {{
            subscriberId }}
          expect:
            - statusCode: 400
            - jsonPath: $.message
              value: Bad Request
          think: 1
      - log: >-
          Configuration API returned an error response, initiating diagnostic
          test.
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/serviceTest'
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
            Content-Type: application/json
          json:
            serviceTest:
              type: diagnostic
              customer:
                subscriberId: '{{ subscriberId }}'
          log: Sending diagnostic test request for subscriber ID {{ subscriberId }}
          capture:
            json: $.serviceTest.id
            as: serviceTestId
          expect:
            - statusCode: 200
            - jsonPath: $.serviceTest.id
              matcher: regex
              value: ^[a-zA-Z0-9-]+$
          think: 1
      - log: Received diagnostic test ID, retrieving test results.
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/listener/serviceTestResultEvent'
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
            Content-Type: application/json
          json:
            notification:
              customer:
                subscriberId: '{{ subscriberId }}'
              serviceTest:
                id: '{{ serviceTestId }}'
                type: diagnostic
          log: Checking diagnostic results for test ID {{ serviceTestId }}
          expect:
            - statusCode: 200
            - jsonPath: $.notification.serviceTest.diagnostic.code
              value: NOK
          think: 1
      - log: Identified issue from diagnostic, retrying configuration change.
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/configuration'
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
            Content-Type: application/json
          json:
            configuration:
              action:
                type: '{{ type }}'
                parameters: '{{ parameters }}'
              customer:
                subscriberId: '{{ subscriberId }}'
          log: >-
            Retrying WiFi configuration change for subscriber ID {{ subscriberId
            }}
          expect:
            - statusCode: 200
            - jsonPath: $.message
              value: Success
          think: 1
      - log: Configuration change successful, WiFi settings updated.
