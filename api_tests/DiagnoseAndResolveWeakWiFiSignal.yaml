# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# ROOST_METHOD_HASH=75c9169c0c
# ROOST_METHOD_SIG_HASH=7a25c565c6
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Diagnose and resolve weak WiFi signal',
#     steps: 'Given a customer with subscriber ID "SVTAL001" reports a weak WiFi signal\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate low WiFi signal strength\n' +
#       'When the support representative uses the configuration API to change the WiFi channel\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report improved WiFi signal strength',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "https://api.example.com"
  phases:
    - duration: 60
      arrivalRate: 5
  variables:
    subscriberId: "SVTAL001"

scenarios:
  - name: Diagnose and resolve weak WiFi signal
    flow:
      - log: "Initiating diagnostic test for subscriber with ID {{ subscriberId }}"
      - post:
          url: "/v1/service-test"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            subscriberId: "{{ subscriberId }}"
            testType: "wifi-diagnostic"
          capture:
            - json: "$.testId"
              as: "testId"
          expect:
            - statusCode: 201
            - hasProperty: "testId"
            - contentType: "application/json"

      - log: "Retrieving diagnostic test results for test ID {{ testId }}"
      - get:
          url: "/v1/service-test/{{ testId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "result"
            - hasProperty: "signalStrength"
            - jmespath: "signalStrength"
              equals: "low"

      - log: "Changing WiFi channel for subscriber {{ subscriberId }}"
      - put:
          url: "/v1/wifi-config/{{ subscriberId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            channel: 6
          expect:
            - statusCode: 200
            - hasProperty: "status"
            - jmespath: "status"
              equals: "success"

      - log: "Verifying improved WiFi signal strength"
      - get:
          url: "/v1/wifi-status/{{ subscriberId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "signalStrength"
            - jmespath: "signalStrength"
              equals: "improved"
