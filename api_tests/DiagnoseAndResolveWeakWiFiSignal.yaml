# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=75c9169c0c
# ROOST_METHOD_SIG_HASH=7a25c565c6
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Diagnose and resolve weak WiFi signal',
#     steps: 'Given a customer with subscriber ID "SVTAL001" reports a weak WiFi signal\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate low WiFi signal strength\n' +
#       'When the support representative uses the configuration API to change the WiFi channel\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report improved WiFi signal strength',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: '{{ $processEnvironment.API_HOST }}'
  phases:
    - duration: 60
      arrivalRate: 1
  processor: ./processors.js
  environments:
    development:
      target: http://dev.api.example.com
    production:
      target: http://api.example.com
  payload:
    path: DiagnoseAndResolveWeakWiFiSignal.csv
    fields:
      - subscriberId
      - wifiChannel
    skipHeader: true
    delimiter: ^|^
  plugins:
    expect: {}
scenarios:
  - name: scenario_diagnose_and_resolve_weak_wifi_signal
    flow:
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/serviceTest'
          json:
            serviceTest:
              type: diagnostic
              customer:
                subscriberId: '{{ subscriberId }}'
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          log: Initiating diagnostic test for weak WiFi signal
          expect:
            - statusCode: 200
            - hasProperty: serviceTest.id
            - hasProperty: serviceTest.customer.subscriberId
            - hasProperty: serviceTest.type
          think: 1
      - log: Diagnostic test initiated, checking for low WiFi signal strength
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/configuration'
          json:
            configuration:
              action:
                type: HGW_WIFI_SET_PASSWD
                parameters:
                  wifiChannel: '{{ wifiChannel }}'
              customer:
                subscriberId: '{{ subscriberId }}'
          headers:
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          log: Changing WiFi channel to resolve weak signal issue
          expect:
            - statusCode: 200
            - hasProperty: configuration.id
            - hasProperty: configuration.action.type
            - hasProperty: configuration.customer.subscriberId
          think: 1
      - log: Configuration changed, expecting improved WiFi signal strength
