# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=ee0418c08a
# ROOST_METHOD_SIG_HASH=1c092be52c
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Diagnose and resolve WiFi interference issues',
#     steps: 'Given a customer with subscriber ID "SVTAL004" reports slow WiFi speeds\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate WiFi interference on the current channel\n' +
#       'When the support representative uses the configuration API to change the WiFi channel to an less congested one\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report improved WiFi speeds',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: '{{ $processEnvironment.API_HOST }}'
  phases:
    - duration: 60
      arrivalRate: 1
  processor: ./processors.js
  environments:
    development:
      target: http://dev.api.example.com
    staging:
      target: http://staging.api.example.com
    production:
      target: http://api.example.com
  payload:
    path: DiagnoseAndResolveWiFiInterferenceIssues.csv
    fields:
      - subscriberId
      - type
      - frequencyBand
      - wifiIndex
      - passwd
      - mode
    skipHeader: true
    delimiter: ^|^
  plugins:
    expect: {}
scenarios:
  - name: Diagnose and resolve WiFi interference issues
    flow:
      - log: Initiating diagnostic test for customer with subscriber ID SVTAL004
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/serviceTest'
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          json:
            serviceTest:
              type: diagnostic
              customer:
                subscriberId: '{{ subscriberId }}'
          expect:
            - statusCode: 200
            - jsonPath: $.serviceTest.id
            - jsonPath: $.serviceTest.state
      - think: 1
      - log: >-
          Changing WiFi channel to a less congested one using the configuration
          API
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/configuration'
          headers:
            Content-Type: application/json
            Authorization: Bearer {{ $processEnvironment.AUTH_TOKEN }}
          json:
            configuration:
              action:
                type: HGW_WIFI_CONFIGURATION
                parameters:
                  frequencyBand: '{{ frequencyBand }}'
                  wifiIndex: '{{ wifiIndex }}'
                  passwd: '{{ passwd }}'
                  mode: '{{ mode }}'
              customer:
                subscriberId: '{{ subscriberId }}'
          expect:
            - statusCode: 200
            - jsonPath: $.configuration.action.type
            - jsonPath: $.configuration.customer.subscriberId
      - think: 1
