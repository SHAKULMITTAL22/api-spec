# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Claude AI and AI Model claude-3-5-sonnet-20240620
# 
# ROOST_METHOD_HASH=ee0418c08a
# ROOST_METHOD_SIG_HASH=1c092be52c
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: WiFi Troubleshooting for Fiber Internet Customers',
#   background: 'Background:\n' +
#     '    Given the customer support representative has access to the service activation and configuration API\n' +
#     '    And the customer support representative has access to the service test management API',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Diagnose and resolve WiFi interference issues',
#     steps: 'Given a customer with subscriber ID "SVTAL004" reports slow WiFi speeds\n' +
#       'When the support representative initiates a diagnostic test\n' +
#       'Then the service test API should return a test ID\n' +
#       'And the diagnostic result should indicate WiFi interference on the current channel\n' +
#       'When the support representative uses the configuration API to change the WiFi channel to an less congested one\n' +
#       'Then the configuration API should return a success response\n' +
#       'And the customer should report improved WiFi speeds',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: '{{ $processEnvironment.API_HOST }}'
  phases:
    - duration: 1
      arrivalRate: 1
  payload:
    path: '{{ROOST_CSV_FILE_NAME}}'
    fields:
      - subscriberId
    skipHeader: true
  delimiter: ^|^
scenarios:
  - name: Diagnose and resolve WiFi interference issues
    flow:
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/serviceTest'
          json:
            serviceTest:
              type: diagnostic
              customer:
                subscriberId: '{{ subscriberId }}'
          capture:
            - json: $.serviceTest.id
              as: testId
          expect:
            - statusCode: 200
            - hasProperty: serviceTest.id
      - post:
          url: '{{ $processEnvironment.API_HOST_1 }}/listener/serviceTestResultEvent'
          json:
            notification:
              customer:
                subscriberId: '{{ subscriberId }}'
              serviceTest:
                id: '{{ testId }}'
                type: diagnostic
                state: FINISHED
                diagnostic:
                  code: NOK
                  messages:
                    - errorCode: WIFI_INTERFERENCE
                      description: WiFi interference detected on current channel
                      criticity: 1
          expect:
            - statusCode: 204
      - post:
          url: '{{ $processEnvironment.API_HOST_0 }}/configuration'
          json:
            configuration:
              action:
                type: HGW_WIFI_CONFIGURATION
                parameters:
                  wifiChannel: '6'
              customer:
                subscriberId: '{{ subscriberId }}'
          expect:
            - statusCode: 200
            - hasProperty: control.type
            - equals:
                - '{{ control.type }}'
                - S
      - post:
          url: >-
            {{ $processEnvironment.API_HOST_0
            }}/listener/configurationResultEvent
          json:
            notification:
              customer:
                subscriberId: '{{ subscriberId }}'
              configuration:
                type: HGW_WIFI_CONFIGURATION
                state: FINISHED
                diagnostic:
                  code: OK
          expect:
            - statusCode: 204
