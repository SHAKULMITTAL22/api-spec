# ********RoostGPT********

# Test generated by RoostGPT for test api-test using AI Type Open Source AI and AI Model meta-llama/Llama-2-13b-chat
# 
# Test generated for /login_post for http method type POST in artillery framework
# RoostTestHash=e0cf5b2e0e
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 1
      arrivalRate: 1
  plugins:
    expect: {}

scenarios:
  - name: "Invalid login request"
    flow:
      - log: "Requesting login with invalid credentials"
        post:
          url: "/login"
          headers:
            Content-Type: "application/json"
          payload:
            type: "json"
            data:
              email: "{{ $processEnvironment.INVALID_EMAIL }}"
              otp: "{{ $processEnvironment.INVALID_OTP }}"
              client: "{{ $processEnvironment.CLIENT }}"
          expect:
            statusCode: 400
            header:
              - "Content-Type"
            body:
              - "hasProperty": "error"
              - "hasProperty": "message"
      - think: 1

  - name: "Invalid URL test"
    flow:
      - log: "Requesting login with invalid URL"
        get:
          url: "/invalid-url"
          expect:
            statusCode: 404
            header:
              - "Content-Type"
      - think: 1

  - name: "Missing required field"
    flow:
      - log: "Requesting login with missing required field"
        post:
          url: "/login"
          headers:
            Content-Type: "application/json"
          payload:
            type: "json"
            data:
              email: "{{ $processEnvironment.EMAIL }}"
              otp: "{{ $processEnvironment.OTP }}"
              # Missing client field
          expect:
            statusCode: 400
            header:
              - "Content-Type"
            body:
              - "hasProperty": "error"
              - "hasProperty": "message"
      - think: 1

  - name: "Invalid email format"
    flow:
      - log: "Requesting login with invalid email format"
        post:
          url: "/login"
          headers:
            Content-Type: "application/json"
          payload:
            type: "json"
            data:
              email: "invalid-email"
              otp: "{{ $processEnvironment.OTP }}"
              client: "{{ $processEnvironment.CLIENT }}"
          expect:
            statusCode: 400
            header:
              - "Content-Type"
            body:
              - "hasProperty": "error"
              - "hasProperty": "message"
      - think: 1

  - name: "Invalid OTP"
    flow:
      - log: "Requesting login with invalid OTP"
        post:
          url: "/login"
          headers:
            Content-Type: "application/json"
          payload:
            type: "json"
            data:
              email: "{{ $processEnvironment.EMAIL }}"
              otp: "invalid-otp"
              client: "{{ $processEnvironment.CLIENT }}"
          expect:
            statusCode: 400
            header:
              - "Content-Type"
            body:
              - "hasProperty": "error"
              - "hasProperty": "message"
      - think: 1

  - name: "Invalid client"
    flow:
      - log: "Requesting login with invalid client"
        post:
          url: "/login"
          headers:
            Content-Type: "application/json"
          payload:
            type: "json"
            data:
              email: "{{ $processEnvironment.EMAIL }}"
              otp: "{{ $processEnvironment.OTP }}"
              client: "invalid-client"
          expect:
            statusCode: 400
            header:
              - "Content-Type"
            body:
              - "hasProperty": "error"
              - "hasProperty": "message"
      - think: 1
