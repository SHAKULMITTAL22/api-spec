# ********RoostGPT********
# Test generated by RoostGPT for test api-test using AI Type Open AI and AI Model gpt-4-1106-preview

# Test generated for /authorizations/{id}_delete for http method type DELETE in artillery framework
# RoostTestHash=cb128291e8



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "authorizations_id_delete_others.csv"
    fields:
      - "id"
    skipHeader: true
  environments:
    staging:
      target: "https://staging.example.com"

scenarios:
  - name: "Non-Success API Responses Test"
    flow:
      # Invalid authentication token
      - post:
          url: "/authorizations/{{ id }}"
          headers:
            Token: "InvalidToken"
          expect:
            - statusCode: 401
          comment: "Expecting 401 Unauthorized due to invalid authentication token."
      #- think: 1

      # Missing authentication token
      - post:
          url: "/authorizations/{{ id }}"
          headers: {}
          expect:
            - statusCode: 401
          comment: "Expecting 401 Unauthorized because the authentication token is missing."
      #- think: 1

      # Invalid UUID in the URL
      - delete:
          url: "/authorizations/invalid-uuid"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
          comment: "Expecting 400 Bad Request due to invalid UUID format in the URL."
      #- think: 1

      # Attempt to delete non-existent authorization
      - delete:
          url: "/authorizations/{{ id }}"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
          comment: "Expecting 404 Not Found when trying to delete a non-existent authorization record."
      #- think: 1

      # Invalid URL case
      - get:
          url: "/invalid-url"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
          comment: "Expecting 404 Not Found when requesting an invalid URL."
      #- think: 1
