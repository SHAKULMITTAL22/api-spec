# ********RoostGPT********
#
Test generated by RoostGPT for test api-test using AI Type Open AI and AI Model gpt-4


#

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "scenario-803fe763f5.csv"
    skipHeader: true
  phases:
    - duration: 20
      arrivalRate: 1
  processor: "./my-processor.js"
  environments:
    development:
      target: "http://localhost:8080"
      http:
        pool: 10

scenarios:
  - name: "Grant authorization"
    flow:
      - log: "Given an existing account, create another account"
      - post:
          url: "/accounts"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            commit-hash: "{{ commitHash }}"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 201
            - hasProperty: "account"
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
      - think: 1
      - log: "When the client sends a POST request to /authorizations"
      - post:
          url: "/authorizations"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            commit-hash: "{{ commitHash }}"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 201
            - hasProperty: "authorization"
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
      - think: 1
      - log: "Then grant access to your account and confirm access via GET request to /authorizations"
      - get:
          url: "/authorizations"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            commit-hash: "{{ commitHash }}"
          expect:
            - statusCode: 200
            - hasProperty: "authorizations"
            - hasHeader: "api-version"
            - headerEquals: {"api-version": "1.0.0"}
