# ********RoostGPT********

# Test generated by RoostGPT for test API-test-Vtal using AI Type Open AI and AI Model gpt-4-turbo
# 
# ROOST_METHOD_HASH=b9d4219d73
# ROOST_METHOD_SIG_HASH=ef3790ab63
# 
#    ########## Scenario ##########  
# 
# {
#   feature: 'Feature: Order products using an API',
#   background: null,
#   rule: null,
#   scenario: {
#     title: 'Scenario: Failed product order creation',
#     steps: 'Given I have the following product order details\n' +
#       '      """\n' +
#       '      {\n' +
#       '        "order": {\n' +
#       '          "correlationOrder": "10",\n' +
#       '          "associatedDocument": "VTT001",\n' +
#       '          "associatedDocumentDate": "2021-06-09T18:20:53-03:00",\n' +
#       '          "type": "Instalacao",\n' +
#       '          "infraType": "FTTH",\n' +
#       '          "customer": {\n' +
#       '            "name": "Sandbox V.tal",\n' +
#       '            "subscriberId": "SVTAL001",\n' +
#       '            "businessUnity": "varejo",\n' +
#       '            "fantasyName": "InterHome Internet",\n' +
#       '            "phoneNumber": {\n' +
#       '              "phoneNumbers": ["000000000"]\n' +
#       '            },\n' +
#       '            "workContact": {\n' +
#       '              "name": "sindico Vtal",\n' +
#       '              "email": "sindicovtal@vtal.com",\n' +
#       '              "phone": "21999900000"\n' +
#       '            }\n' +
#       '          },\n' +
#       '          "appointment": {\n' +
#       '            "hasSlot": true,\n' +
#       '            "date": "2021-05-05T08:00:00",\n' +
#       '            "mandatoryType": "Obrigatorio",\n' +
#       '            "workOrderId": "SA-562403"\n' +
#       '          },\n' +
#       '          "addresses": {\n' +
#       '            "address": {\n' +
#       '              "id": 14393,\n' +
#       '              "inventoryId": "1766156",\n' +
#       '              "reference": "Do lado da padaria",\n' +
#       '              "complement": {\n' +
#       '                "complements": [\n' +
#       '                  {\n' +
#       '                    "type": "ES",\n' +
#       '                    "value": "ARC201"\n' +
#       '                  }\n' +
#       '                ]\n' +
#       '              }\n' +
#       '            }\n' +
#       '          },\n' +
#       '          "products": {\n' +
#       '            "product": [\n' +
#       '              {\n' +
#       '                "catalogId": "BL_200MB",\n' +
#       '                "action": "adicionar"\n' +
#       '              }\n' +
#       '            ]\n' +
#       '          }\n' +
#       '        }\n' +
#       '      }\n' +
#       'When I make a POST request to "http://34.131.81.54:8085/productOrder" with the product order details\n' +
#       'And the response status code is not 201\n' +
#       'Then I should not make any request to "http://34.131.81.54:8086/confirmOrder"',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  environments:
    production:
      target: "http://34.131.81.54:8085"
  payload:
    path: "FailedProductOrderCreation.csv"
    fields:
      - correlationOrder
      - associatedDocument
      - associatedDocumentDate
      - type
      - infraType
      - name
      - subscriberId
      - businessUnity
      - fantasyName
      - phoneNumbers
      - workContactName
      - workContactEmail
      - workContactPhone
      - hasSlot
      - date
      - mandatoryType
      - workOrderId
      - addressId
      - inventoryId
      - reference
      - complementType
      - complementValue
      - catalogId
      - action
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Failed product order creation"
    flow:
      - log: "Attempting to create a product order with invalid details expecting failure"
      - post:
          url: "/productOrder"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            order:
              correlationOrder: "{{ correlationOrder }}"
              associatedDocument: "{{ associatedDocument }}"
              associatedDocumentDate: "{{ associatedDocumentDate }}"
              type: "{{ type }}"
              infraType: "{{ infraType }}"
              customer:
                name: "{{ name }}"
                subscriberId: "{{ subscriberId }}"
                businessUnity: "{{ businessUnity }}"
                fantasyName: "{{ fantasyName }}"
                phoneNumber:
                  phoneNumbers: ["{{ phoneNumbers }}"]
                workContact:
                  name: "{{ workContactName }}"
                  email: "{{ workContactEmail }}"
                  phone: "{{ workContactPhone }}"
              appointment:
                hasSlot: true
                date: "{{ date }}"
                mandatoryType: "{{ mandatoryType }}"
                workOrderId: "{{ workOrderId }}"
              addresses:
                address:
                  id: "{{ addressId }}"
                  inventoryId: "{{ inventoryId }}"
                  reference: "{{ reference }}"
                  complement:
                    complements:
                      - type: "{{ complementType }}"
                        value: "{{ complementValue }}"
              products:
                product:
                  - catalogId: "{{ catalogId }}"
                    action: "{{ action }}"
          expect:
            - statusCode: 400
            - notStatusCode: 201
            - hasProperty: 'type'
            - hasProperty: 'message'
            - hasProperty: 'code'
      - log: "Response status code is not 201, as expected for invalid product order details"
      - think: 1
